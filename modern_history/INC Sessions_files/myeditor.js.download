function insertTab() {
    if (!window.getSelection) return;
    const sel = window.getSelection();
    if (!sel.rangeCount) return;
    const range = sel.getRangeAt(0);
    range.collapse(true);

    const span = document.createElement('span');
    span.appendChild(document.createTextNode('\t'));
    span.style.whiteSpace = 'pre';

    range.insertNode(span);

    // Move the caret immediately after the inserted span
    range.setStartAfter(span);
    range.collapse(true);
    sel.removeAllRanges();
    sel.addRange(range);
}

let showHint = false;
let hintBox = document.querySelector('.suggestions');
let selectedNode = 0;
let currentWord = "null";

document.querySelector(".editor").addEventListener("keydown", function () {
    //console.log(window.getSelection());
    event.stopPropagation();
    //console.log(event.keyCode);
    if (event.keyCode == 9) {
        insertTab();
        event.preventDefault();
    }

    if (event.ctrlKey && event.keyCode == 69) {
        console.log("align");
        event.preventDefault();
        if (window.getSelection().anchorNode.parentElement.style.textAlign == "center") {
            window.getSelection().anchorNode.parentElement.style.textAlign = "left"
        } else {
            window.getSelection().anchorNode.parentElement.style.textAlign = "center";
        }
    }

    if (event.ctrlKey && event.keyCode == 107) {
        console.log("font up");
        event.preventDefault();
        let fontSize = window.getComputedStyle(window.getSelection().anchorNode.parentElement).fontSize;
        fontSize = parseFloat(fontSize);
        fontSize++;
        window.getSelection().anchorNode.parentElement.style.fontSize = fontSize;
    }

    if (event.ctrlKey && event.keyCode == 109) {
        console.log("font down");
        event.preventDefault();
        let fontSize = window.getComputedStyle(window.getSelection().anchorNode.parentElement).fontSize;
        fontSize = parseFloat(fontSize);
        fontSize--;
        window.getSelection().anchorNode.parentElement.style.fontSize = fontSize;
    }

    if (event.ctrlKey && event.keyCode == 76) {
        console.log("list");
        event.preventDefault();
        insertHtmlAtCursor("<ol><li></li></ol>");
    }
    if(showHint)
    {
        if(event.keyCode==38 || event.keyCode==40 ||event.keyCode==13)
        {
            event.preventDefault();
        }
    }



});

function resetHintBox() {
    showHint = false;
    hintBox.style.display = "none";
    selectedNode = -1;
}
function showHintBox() {
    showHint = true;
    hintBox.style.display = "inline";
    console.log('hint on')
    positionHintBox();
    selectedNode = -1;
}

function handleHint(event) {
    // select and insert hints
    if (showHint) {
        if (event.keyCode == 38) {
            //up
            event.preventDefault();
            if (document.querySelector('.selectedHint') != null) {
                document.querySelector('.selectedHint').className = '';
            }
            selectedNode--;
            if (selectedNode < 0) {
                selectedNode = hintBox.childNodes.length - 1;
            }
            // console.log(selectedNode);
            hintBox.childNodes[selectedNode].className = 'selectedHint';
        } else
            if (event.keyCode == 40) {
                //down
                event.preventDefault();
                if (document.querySelector('.selectedHint') != null) {
                    document.querySelector('.selectedHint').className = '';
                }
                selectedNode++;
                if (selectedNode >= hintBox.childNodes.length) {
                    selectedNode = 0;
                }
                // console.log(selectedNode);
                hintBox.childNodes[selectedNode].className = 'selectedHint';
            } else
                if (event.keyCode == 13) {
                    if (document.querySelector('.selectedHint') == null)
                    {
                        //enter press when hint is on and now hint selected
                        console.log('p')
                        showHint = false;
                        hintBox.style.display = "none";
                    } else
                    {
                        event.preventDefault();
                        console.log('inserting word')
                        //use this word
                        let wordToInsert = document.querySelector('.selectedHint').innerText.trim();
                        insertHint(wordToInsert, currentWord);
                        showHint = false;
                        hintBox.style.display = "none";
                    }
                }
                else {
                    //words
                    currentWord = getCurrentWord();
                    if (currentWord.length > 0)
                    {
                        let s=document.querySelector('#script');
                        document.querySelector("body").removeChild(s);
                        s=document.createElement("script");
                        s.id="script";
                        s.setAttribute("src",`http://suggestqueries.google.com/complete/search?client=chrome&q=${currentWord}&callback=handleDataFromGoogle`);
                        document.querySelector("body").appendChild(s);


                    }else{
                        hintBox.style.display="none";
                    }
                }
    }
}
function handleDataFromGoogle(data)
{
    let html = '';
    // console.log('all words=' + words)
    let limit=5;
    data[1].forEach((item,index) =>
    {
        if (index<=limit)
        {
            // console.log(item);
            html += `<li>${item}</li>`;
        }
    });
    if (html.length > 0)
    {
        hintBox.innerHTML = html;
        hintBox.style.display = "inline";
        positionHintBox();
    }else
    {
        hintBox.style.display="none";    
    }
}
document.querySelector(".editor").addEventListener("keyup", function () {

    // console.log(event.keyCode);
    if (event.keyCode == 27) {
        resetHintBox();
    }
    if (event.keyCode == 32) {
       showHintBox();
    }
    if (event.ctrlKey && event.keyCode == 32) {
        showHintBox();
    }

    handleHint(event);


});

function positionHintBox() {
    try {
        let range = window.getSelection().getRangeAt(0);
        let rect = range.endContainer.parentElement.getBoundingClientRect();
        hintBox.style.top = (rect.top+10) + 'px';

        document.querySelector('#dummy').innerHTML = range.endContainer.textContent.toString().substring(0, range.endOffset);
        rect = document.querySelector('#dummy').getBoundingClientRect();
        //console.log(range);
        hintBox.style.left = (rect.width) + 'px';
    } catch (e) {
        console.log('no node');
    }
}

function changeFileName()
{
    document.querySelector("#chapter").setAttribute("value", document.querySelector("#chapter").value.trim());
    document.querySelector(".subtitle").setAttribute("value", document.querySelector(".subtitle").value.trim());
    document.querySelector("#title").innerHTML=document.querySelector("#chapter").value+" "+document.querySelector(".subtitle").value
}

document.querySelector("#chapter").addEventListener("keyup", function () {
    try
    {
        changeFileName();
    } catch (e) { }
});
document.querySelector(".subtitle").addEventListener("keyup", function () {
    try
    {
        changeFileName();
    } catch (e) { }
});




function isAlphanumeric(char) {
    return "0123456789abcdefghijklmnopqrstuvwxyz@#$%^&*()_-+{}[]".indexOf(char) > -1;
}
function getCurrentWord() {

    let currentWord="";
    let range = window.getSelection().getRangeAt(0);
    let wholeText = range.endContainer.wholeText.toString();
    let pos = range.endOffset;
    // console.log(pos, wholeText, wholeText.length);
    if (wholeText.length > 0) {
        if (pos == 0) {
            //cursor at 0 and next is a char
            if (isAlphanumeric(wholeText[pos + 1])) {
                //then current word is 0 to space
                // console.log("start");
                currentWord = wholeText.substring(0, wholeText.indexOf(" "));
            }
        }
        if (pos == wholeText.length) {
            //cursor at end of string
            // console.log("end")
            if (isAlphanumeric(wholeText[pos - 1])) {
                //check if left of cursor is a char
                currentWord = wholeText.substring(wholeText.lastIndexOf(" "),pos);
            }
        }
        if (pos < wholeText.length && pos > 0) {
            //pos is between wholetext
            if (isAlphanumeric(wholeText[pos - 1]) && wholeText[pos] == " ") {
                // console.log('testign -1 +1',wholeText[pos-1],wholeText[pos])
                // //abc abc| abc
                currentWord = wholeText.substring(0, pos);
                currentWord = currentWord.substring(currentWord.lastIndexOf(" ")+1, pos);

            } else if (isAlphanumeric(wholeText[pos]) && wholeText[pos - 1] == " ") {
                //abc |abc abc
                // console.log('not working')
                currentWord = wholeText.substring(pos, wholeText.indexOf(" ",pos));
            } else if (isAlphanumeric(wholeText[pos]) && isAlphanumeric(wholeText[pos - 1])) {
                //abc abc a|b
                //abc abc abc   
                //console.log('wokring')
                let a = wholeText.substring(0, pos);
                let b = wholeText.substring(pos, wholeText.length);
                let nextspace=b.indexOf(" ");
                if(nextspace==-1)
                {
                    //last word no space
                    currentWord = a.substring(a.lastIndexOf(" ")+1)+b;
                }else{
                    currentWord = a.substring(a.lastIndexOf(" ")+1) + b.substring(0, b.indexOf(" "));

                }
            }
        }
        //console.log(currentWord);
    }
    return currentWord.trim();
}

function insertHtmlAtCursor(html) {
    var sel, range, node;
    if (window.getSelection) {
        sel = window.getSelection();
        if (sel.getRangeAt && sel.rangeCount) {
            range = window.getSelection().getRangeAt(0);
            node = range.createContextualFragment(html);
            range.insertNode(node);
        }
    }
}
function insertHint(html, word)
{
    let range = window.getSelection().getRangeAt(0);
    console.log(range);
    let parent = range.endContainer.parentElement;
    let wholeText = range.endContainer.wholeText.toString();
    
    let insert=wholeText.substring(0, range.endOffset - word.length) + "" + html+" "+wholeText.substring(range.endOffset+word.length,wholeText.length);
    
    console.log('inserted=' +insert);
    parent.innerHTML=insert;

    //set cursor
    range.setEnd(parent,1);
}


